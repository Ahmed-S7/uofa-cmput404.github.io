<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>CMPUT 404 - Lab</title><link href="https://uofa-cmput404.github.io/" rel="alternate"></link><link href="https://uofa-cmput404.github.io/feeds/lab.atom.xml" rel="self"></link><id>https://uofa-cmput404.github.io/</id><updated>2019-01-04T15:24:00-07:00</updated><entry><title>Lab 1 - virtualenv &amp; curl</title><link href="https://uofa-cmput404.github.io/lab-1-virtualenv-curl.html" rel="alternate"></link><published>2019-01-04T15:24:00-07:00</published><updated>2019-01-04T15:24:00-07:00</updated><author><name>Alexander Wong</name></author><id>tag:uofa-cmput404.github.io,2019-01-04:/lab-1-virtualenv-curl.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;Introduction to CMPUT 404 labs. Setup &lt;a href="https://docs.python-guide.org/dev/virtualenvs/"&gt;virtualenv&lt;/a&gt; and understand basic usage of &lt;a href="https://curl.haxx.se/"&gt;curl&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Create a text file &lt;code&gt;lab1-${ccid}.txt&lt;/code&gt; containing answers to the questions and submit to &lt;em&gt;Lab 1&lt;/em&gt; on eClass. For example, if your ccid is &lt;code&gt;bob&lt;/code&gt;, the text file should be &lt;code&gt;lab1-bob.txt&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Git and GitHub&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Make â€¦&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;Introduction to CMPUT 404 labs. Setup &lt;a href="https://docs.python-guide.org/dev/virtualenvs/"&gt;virtualenv&lt;/a&gt; and understand basic usage of &lt;a href="https://curl.haxx.se/"&gt;curl&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Create a text file &lt;code&gt;lab1-${ccid}.txt&lt;/code&gt; containing answers to the questions and submit to &lt;em&gt;Lab 1&lt;/em&gt; on eClass. For example, if your ccid is &lt;code&gt;bob&lt;/code&gt;, the text file should be &lt;code&gt;lab1-bob.txt&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Git and GitHub&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Make a GitHub account or log in to your existing GitHub account.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Question 1&lt;/strong&gt;: What is your GitHub URL?&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;virtualenv&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Create a new directory for this lab (&lt;code&gt;mkdir&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd&lt;/code&gt; into the created directory and initialize a new git repository (&lt;code&gt;git init&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Try installing &lt;a href="https://pypi.org/project/requests/"&gt;requests&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pip install requests&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make a Python script that prints out the version of the requests library.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Question 2&lt;/strong&gt;: What version is the requests library installed on the system?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a virtualenv.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;virtualenv venv --python=python3&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Activate the python virtual environment.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;source venv/bin/activate&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Try installing &lt;a href="https://pypi.org/project/requests/"&gt;requests&lt;/a&gt; into your virtual environment.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run your Python script that prints out the version of the requests library in your virtualenv.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Question 3&lt;/strong&gt;: What version is the requests library installed in the virtualenv?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open a new terminal.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run the script in your new terminal.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Question 4&lt;/strong&gt;: Does your script print out the same version? Why?&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;curl&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Use &lt;code&gt;curl&lt;/code&gt; to get the Google homepage: &lt;a href="http://www.google.com/"&gt;http://www.google.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This time, use &lt;code&gt;curl -i&lt;/code&gt; to get the Google homepage.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Question 5&lt;/strong&gt;: What status code is returned? What URL must you visit to get a 200 status code?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Curl the Google home page with &lt;code&gt;-iL&lt;/code&gt; and examine the headers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Curl the Google Teapot page: &lt;a href="https://www.google.com/teapot"&gt;https://www.google.com/teapot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Modify your Python script to GET the Google homepage.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Question 6&lt;/strong&gt;: What status code is returned this time? Is it the one returned by &lt;code&gt;curl -i&lt;/code&gt; or &lt;code&gt;curl -iL&lt;/code&gt;?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Try &lt;code&gt;curl -i https://webdocs.cs.ualberta.ca/~hindle1/1.py&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Try it again &lt;code&gt;curl -i -X POST -d "X=Y"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Question 7&lt;/strong&gt;: What changed in the output of &lt;a href="https://webdocs.cs.ualberta.ca/~hindle1/1.py"&gt;https://webdocs.cs.ualberta.ca/~hindle1/1.py&lt;/a&gt; when you used &lt;code&gt;-X POST&lt;/code&gt;? What is this method useful for?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Commit your Python script and push it to GitHub.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Find the raw URL to your Python script on GitHub.&lt;/li&gt;
&lt;li&gt;Modify your Python script so that it downloads itself from GitHub and prints out its own source code &lt;strong&gt;from GitHub&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Push the new version of your Python script to GitHub.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Question 8&lt;/strong&gt;: What is the raw URL to your Python script on GitHub?&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content></entry></feed>